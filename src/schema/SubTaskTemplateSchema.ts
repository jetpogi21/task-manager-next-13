//Generated by WriteToModelschema_ts - ModelSchema.ts
import * as Yup from "yup";

const SubTaskTemplateSchema = Yup.object().shape({
  //Generated by GetAllFieldValidationBySeqModel
description: Yup.string().required("Description is a required field."),
priority: Yup.string().required("Priority is a required field."),
taskTemplateID: Yup.number().required("Task Template ID is a required field."),
  
});

const SubTaskTemplateArraySchema = Yup.object().shape({
  SubTaskTemplates: Yup.array().of(
    Yup.object().shape({
     //Generated by GetAllArrayFieldValidationBySeqModel
description: Yup.string().when("touched", ([touched], schema) => touched ? schema.required("Description is a required field.") : schema.notRequired()),priority: Yup.string().when("touched", ([touched], schema) => touched ? schema.required("Priority is a required field.") : schema.notRequired()),taskTemplateID: Yup.number().when("touched", ([touched], schema) => touched ? schema.required("Task Template ID is a required field.") : schema.notRequired())
    })
  ),
});

export { SubTaskTemplateSchema, SubTaskTemplateArraySchema };
