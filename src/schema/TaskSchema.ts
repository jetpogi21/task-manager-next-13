//Generated by WriteToModelschema_ts - ModelSchema.ts
import * as Yup from "yup";

const TaskSchema = Yup.object().shape({
  //Generated by GetAllFieldValidationBySeqModel
  description: Yup.string().required("Description is a required field."),
  taskCategoryID: Yup.number().required("Task Category is a required field."),
  taskIntervalID: Yup.number().required("Task Interval is a required field."),
  taskTemplateID: Yup.number()
    .nullable()
    .transform((value, originalValue) =>
      originalValue && originalValue !== "" ? value : null
    ),
  date: Yup.string().required("Date is a required field."),
  targetDate: Yup.string().required("Target Date is a required field."),
  finishDateTime: Yup.string()
    .nullable()
    .transform((value, originalValue) =>
      originalValue && originalValue !== "" ? value : null
    ),
  isFinished: Yup.boolean(),
  subTaskImported: Yup.boolean(),
  //Generated by GetAllRelatedLeftArrayValidation
  //Generated by GetRelatedLeftArrayValidation - GetRelatedLeftArrayValidation
  SubTasks: Yup.array().of(
    Yup.object().shape({
      //Generated by GetAllArrayFieldValidationBySeqModel
      description: Yup.string().when("touched", ([touched], schema) =>
        touched
          ? schema.required("Description is a required field.")
          : schema.notRequired()
      ),
      priority: Yup.number().when("touched", ([touched], schema) =>
        touched
          ? schema.required("Priority is a required field.")
          : schema.notRequired()
      ),
      finishDateTime: Yup.string().nullable(),
    })
  ),
  //Generated by GetRelatedLeftArrayValidation - GetRelatedLeftArrayValidation
  TaskNotes: Yup.array().of(
    Yup.object().shape({
      //Generated by GetAllArrayFieldValidationBySeqModel
      note: Yup.string().nullable(),
      file: Yup.string().nullable(),
      fileSize: Yup.number().nullable(),
      fileName: Yup.string().nullable(),
    })
  ),
});

const TaskArraySchema = Yup.object().shape({
  Tasks: Yup.array().of(
    Yup.object().shape({
      //Generated by GetAllArrayFieldValidationBySeqModel
      description: Yup.string().when("touched", ([touched], schema) =>
        touched
          ? schema.required("Description is a required field.")
          : schema.notRequired()
      ),
      taskCategoryID: Yup.number().when("touched", ([touched], schema) =>
        touched
          ? schema.required("Task Category is a required field.")
          : schema.notRequired()
      ),
      taskIntervalID: Yup.number().when("touched", ([touched], schema) =>
        touched
          ? schema.required("Task Interval is a required field.")
          : schema.notRequired()
      ),
      taskTemplateID: Yup.number().nullable(),
      date: Yup.string().when("touched", ([touched], schema) =>
        touched
          ? schema.required("Date is a required field.")
          : schema.notRequired()
      ),
      targetDate: Yup.string().when("touched", ([touched], schema) =>
        touched
          ? schema.required("Target Date is a required field.")
          : schema.notRequired()
      ),
      finishDateTime: Yup.string().nullable(),
      isFinished: Yup.boolean().when("touched", ([touched], schema) =>
        touched ? schema : schema.notRequired()
      ),
      subTaskImported: Yup.boolean().when("touched", ([touched], schema) =>
        touched ? schema : schema.notRequired()
      ),
    })
  ),
});

export { TaskSchema, TaskArraySchema };
