//Generated by GetuseModelListts - useModelList.ts
"use client";
import { GetTaskTemplatesResponse } from "@/interfaces/TaskTemplateInterfaces";
import { TaskTemplateSearchParams } from "@/interfaces/TaskTemplateInterfaces";
import { BasicModel } from "@/interfaces/GeneralInterfaces";
import axiosClient from "@/utils/api";
import { useQuery } from "@tanstack/react-query";
import { useEffect, useState } from "react";

const getTaskTemplates = async () => {
  const { data } = await axiosClient.get<GetTaskTemplatesResponse>(
    `task-templates`,
    {
      params: {
        fetchCount: "false",
        simpleOnly: "true",
      } as Partial<TaskTemplateSearchParams>,
    }
  );

  return data.rows.map((item) => ({
    id: item.id,
    name: item.id.toString(),
  }));
};

interface UseListProps {
  placeholderData?: BasicModel[];
}

const useTaskTemplateList = (prop?: UseListProps) => {
  //local states
  const [mounted, setMounted] = useState(false);

  const _ = useQuery({
    queryKey: ["taskTemplate-list"],
    queryFn: getTaskTemplates,
    enabled: mounted,
    placeholderData: prop?.placeholderData,
  });

  useEffect(() => {
    setMounted(true);
  }, []);

  return _;
};

export default useTaskTemplateList;
