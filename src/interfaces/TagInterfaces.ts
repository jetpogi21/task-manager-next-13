//Generated by WriteToModelinterface_ts - ModelInterface.ts Next 13

import { ListQuery } from "./interface";

export interface TagModel {
  //Generated by GetAllModelFieldTypeBySeqModel
  id: number | string; //Generated by GetModelFieldType
  name: string | null; //Generated by GetModelFieldType
}

//The keys after the updatedAt is generated by GetAllRelatedModelNameBySeqModel - RelatedModelName
export interface TagFormikShape
  extends Omit<TagModel, "slug" | "createdAt" | "updatedAt"> {
  touched: boolean;
  index: number;
}

//Use for continuos list form
export interface TagFormikInitialValues {
  Tags: TagFormikShape[];
}

//The FormikInitialValues is generated by GetAllRelatedFormikInitialValues - ModelFormikInitialValue
export interface TagFormFormikInitialValues
  extends Omit<TagFormikShape, "touched" | "index"> {}

//The extends portion is generated by GetModelUpdatePayloadExtension - GetRelatedPartialPayload
export interface TagUpdatePayload {
  Tags: Omit<TagFormikShape, "touched">[];
}

export interface TagDeletePayload {
  deletedTags: string[] | number[];
}

//Use for single form (with children)
//The Related Models will be replaced by the Payload version
export interface TagFormUpdatePayload
  extends Omit<TagFormikShape, "touched" | "index"> {}

export interface TagFormikFilter {
  //Generated by GetAllFilterInterfaceBySeqmodel
  q: string;
}

export interface TagSearchParams extends ListQuery, Omit<TagFormikFilter, ""> {
  //Generated by GetAllNonStringFilterTypes
}

export interface GetTagsResponse {
  count: number;
  rows: TagModel[];
  cursor: string;
}
