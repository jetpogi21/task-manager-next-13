//Generated by WriteToModelinterface_ts - ModelInterface.ts Next 13
//Generated by GetAllRelatedInterfaceImportBySeqModel
//Generated by GetRelatedInterfaceImport - RelatedInterfaceImport
import { TaskTagFormikInitialValues, TaskTagFormikShape,TaskTagModel,TaskTagUpdatePayload } from "@/interfaces/TaskTagInterfaces";

import { ListQuery } from "./interface";

export interface TagModel {
  //Generated by GetAllModelFieldTypeBySeqModel
id: number | string;//Generated by GetModelFieldType
name: string;//Generated by GetModelFieldType
  //Generated by GetAllChildModelInterfaceBySeqModel
TaskTags: TaskTagModel[];//Generated by GetChildModelInterface - ChildModelInterface
  
  
}

//The keys after the updatedAt is generated by GetAllRelatedModelNameBySeqModel - RelatedModelName
export interface TagFormikShape extends Omit<TagModel, "slug" | "createdAt" | "updatedAt" 
| "TaskTags"//Generated by GetRelatedPluralizedModelName - RelatedPluralizedModelName 
> {
  touched: boolean;
  index: number;
}

//Use for continuos list form
export interface TagFormikInitialValues {
  Tags: TagFormikShape[];
  
}

//The FormikInitialValues is generated by GetAllRelatedFormikInitialValues - ModelFormikInitialValue
export interface TagFormFormikInitialValues
  extends Omit<TagFormikShape, "touched" | "index"> {
  
}

//The extends portion is generated by GetModelUpdatePayloadExtension - GetRelatedPartialPayload
export interface TagUpdatePayload  {
  Tags: Omit<TagFormikShape, "touched">[];
  
}

export interface TagDeletePayload {
  deletedTags: string[] | number[];
}

export interface TagSelectedPayload {
  selectedTags: string[] | number[];
}

//Use for single form (with children)
//The Related Models will be replaced by the Payload version
export interface TagFormUpdatePayload
  extends Omit<TagFormikShape, "touched" | "index" 
> 
 
{
  
}

export interface TagFormikFilter {
  //Generated by GetAllFilterInterfaceBySeqmodel
q: string
}

export interface TagSearchParams
  extends ListQuery,
    Omit<TagFormikFilter, ""> {
  //Generated by GetAllNonStringFilterTypes

}

export interface GetTagsResponse {
  count: number;
  rows: TagModel[];
  cursor: string;
}
