//Generated by WriteToModelconfig_tsInterface - ModelConfig.ts interface
import { LucideIcon } from "lucide-react";

export type ControlType =
  | "Calendar"
  | "Checkbox"
  | "CheckboxGroup"
  | "ComboBox"
  | "Currency"
  | "Date"
  | "DateAndTime"
  | "DatePicker"
  | "DateRangePicker"
  | "Decimal"
  | "FacetedControl"
  | "FileInput"
  | "Hidden"
  | "LocalFileInput"
  | "MultiSelectComboBox"
  | "OptionGroup"
  | "Password"
  | "Select"
  | "Switch"
  | "Text"
  | "Textarea"
  | "WholeNumber";

export type DataType =
  | "BIGINT"
  | "BOOLEAN"
  | "CHAR"
  | "DATE"
  | "DATEONLY"
  | "DECIMAL"
  | "DOUBLE"
  | "ENUM"
  | "FLOAT"
  | "INTEGER"
  | "NOW"
  | "SMALLINT"
  | "STRING"
  | "TEXT"
  | "TIME"
  | "TINYINT"
  | "UUID";

export type FilterOperator =
  | "Between"
  | "Equal"
  | "In"
  | "Is Null"
  | "isPresent"
  | "Like"
  | "Not is Null";

interface ModelKeys {
  seqModelID: number;
  modelName: string;
  tableName: string;
  timestamps: boolean;
  pluralizedModelName: string;
  modelPath: string;
  variableName: string;
  isMainQuery: boolean;
  sortString: string;
  slugField: string | null;
  variablePluralName: string;
  verboseModelName: string;
  pluralizedVerboseModelName: string;
  navItemOrder: number | null;
  capitalizedName: string;
  isRowAction: boolean;
  isTable: boolean;
  navItemIcon: LucideIcon | null;
  containerWidth: string | null;
  limit: number | null;
}

interface ModelFieldKeys {
  seqModelFieldID: number;
  unique: boolean;
  fieldName: string;
  autoincrement: boolean;
  primaryKey: boolean;
  allowNull: boolean;
  databaseFieldName: string;
  pluralizedFieldName: string | null;
  allowedOptions: string | null;
  fieldOrder: number;
  verboseFieldName: string;
  fieldWidth: number | null;
  relatedModelID: number | null;
  hideInTable: boolean;
  orderField: boolean;
  dataType: DataType;
  dataTypeInterface: string;
  controlType: ControlType;
  columnsOccupied: number;
}

interface ModelFilterOptionKeys {
  seqModelFilterOptionID: number;
  fieldValue: string;
  fieldCaption: string;
}

interface ModelFilterKeys {
  seqModelFilterID: number;
  seqModelID: number;
  seqModelFieldID: number | null;
  filterQueryName: string;
  listVariableName: string | null;
  filterOrder: number;
  filterCaption: string | null;
  seqModelRelationshipID: number | null;
  modelListID: number | null;
  modelPath: string | null;
  controlType: ControlType;
  variableName: string | null;
  filterOperator: FilterOperator;
  options: ModelFilterOptionKeys[];
}

interface ModelSortKeys {
  seqModelSortID: number;
  seqModelFieldID: number;
  modelFieldCaption: string;
  modelSortOrder: number;
  sortKey: string | null;
}

export interface ModelConfig extends ModelKeys {
  fields: ModelFieldKeys[];
  filters: ModelFilterKeys[];
  sorts: ModelSortKeys[];
}
