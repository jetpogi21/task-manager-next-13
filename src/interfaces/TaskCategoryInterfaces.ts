//Generated by WriteToModelinterface_ts - ModelInterface.ts Next 13

import { ListQuery } from "./interface";

export interface TaskCategoryModel {
  //Generated by GetAllModelFieldTypeBySeqModel
  id: number | string; //Generated by GetModelFieldType
  name: string; //Generated by GetModelFieldType
}

//The keys after the updatedAt is generated by GetAllRelatedModelNameBySeqModel - RelatedModelName
export interface TaskCategoryFormikShape
  extends Omit<TaskCategoryModel, "slug" | "createdAt" | "updatedAt"> {
  touched: boolean;
  index: number;
}

//Use for continuos list form
export interface TaskCategoryFormikInitialValues {
  TaskCategories: TaskCategoryFormikShape[];
}

//The FormikInitialValues is generated by GetAllRelatedFormikInitialValues - ModelFormikInitialValue
export interface TaskCategoryFormFormikInitialValues
  extends Omit<TaskCategoryFormikShape, "touched" | "index"> {}

//The extends portion is generated by GetModelUpdatePayloadExtension - GetRelatedPartialPayload
export interface TaskCategoryUpdatePayload {
  TaskCategories: Omit<TaskCategoryFormikShape, "touched">[];
}

export interface TaskCategoryDeletePayload {
  deletedTaskCategories: string[] | number[];
}

//Use for single form (with children)
//The Related Models will be replaced by the Payload version
export interface TaskCategoryFormUpdatePayload
  extends Omit<TaskCategoryFormikShape, "touched" | "index"> {}

export interface TaskCategoryFormikFilter {
  //Generated by GetAllFilterInterfaceBySeqmodel
  q: string;
}

export interface TaskCategorySearchParams
  extends ListQuery,
    Omit<TaskCategoryFormikFilter, ""> {
  //Generated by GetAllNonStringFilterTypes
}

export interface GetTaskCategoriesResponse {
  count: number;
  rows: TaskCategoryModel[];
  cursor: string;
}
