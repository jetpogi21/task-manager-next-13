//Generated by ImportCompleteModelFile
//Generated by GetCompleteModelFile

//Generated by GetModelImports
import {
  CreationOptional,
  DataTypes,
  InferAttributes,
  InferCreationAttributes,
  Model,
  Sequelize,
} from "sequelize";
import sequelize from "../config/db";
import { Task } from "./TaskModel";

//Generated by GetModelInterface
export default interface TaskNote
  extends Model<InferAttributes<TaskNote>, InferCreationAttributes<TaskNote>> {
  id: CreationOptional<number>;
  note: string;
  taskID: number;
  file: string;
}

//Generated by GetModelDefinition
export const TaskNote = sequelize.define<TaskNote>(
  "TaskNote",
  //Generated by GetModelFieldsDictionary
  {
    id: {
      type: DataTypes.BIGINT,
      autoIncrement: true,
      primaryKey: true,
      field: "id",
    },
    note: {
      type: DataTypes.TEXT,
      field: "note",
    },
    taskID: {
      type: DataTypes.BIGINT,
      field: "task_id",
      //Generated by GetReferencesKeyForModelCreationMigration - references key for model creation
      references: {
        model: "taskmanager_task",
        key: "id",
      },
      onUpdate: "CASCADE",
      onDelete: "CASCADE",
    },
    file: {
      type: DataTypes.TEXT,
      field: "file",
    },
  },
  //Generated By GetModelOptionDict
  {
    name: { singular: "TaskNote", plural: "TaskNotes" },
    tableName: "taskmanager_note",
    timestamps: false,
  }
);

//Generated by GenerateSyncModel
export const TaskNoteSync = async () => {
  try {
    await TaskNote.sync({ alter: true });
    console.log("Task Note table has been created!");
  } catch (error) {
    console.error(
      `Unable to create ${"Task Note".toLowerCase()} table:`,
      error
    );
  }
};

//Generated by GenerateModelRelationship
Task.hasMany(TaskNote, {
  foreignKey: "task_id",
  onDelete: "CASCADE",
  onUpdate: "CASCADE",
});
TaskNote.belongsTo(Task, {
  foreignKey: "task_id",
  onDelete: "CASCADE",
  onUpdate: "CASCADE",
});
