//Generated by ImportCompleteModelFile
//Generated by GetCompleteModelFile

//Generated by GetModelImports
import {CreationOptional,DataTypes,InferAttributes,InferCreationAttributes,Model,Sequelize} from "sequelize";
import sequelize from "../config/db";

//Generated by GetModelInterface
export default interface Tag extends Model<InferAttributes<Tag>, InferCreationAttributes<Tag>>
{id: CreationOptional<number>;
name: string}

//Generated by GetModelDefinition
export const Tag = sequelize.define<Tag>(
"Tag",
//Generated by GetModelFieldsDictionary
{
 id: {
  type: DataTypes.BIGINT,
  autoIncrement: true,
  primaryKey: true,
  field: "id"
 }
 ,
 name: {
  type: DataTypes.STRING(50),
  unique: true,
  field: "name"
 }
}
,
//Generated By GetModelOptionDict
{
  name: {singular: "Tag",plural:"Tags"},
  tableName: "taskmanager_tag",
  timestamps: false
}
);

//Generated by GenerateSyncModel
export const TagSync = async () => {
  try {
    await Tag.sync({ alter: true });
    console.log("Tag table has been created!");
  } catch (error) {
    console.error(
      `Unable to create ${"Tag".toLowerCase()} table:`,
      error
    );
  }
};
